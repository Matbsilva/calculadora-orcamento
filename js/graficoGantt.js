// js/graficoGantt.js
// ... (Conteúdo completo do graficoGantt.js fornecido na mensagem anterior)
let ganttInstance = null;
export function initGraficoGantt() { /* ... */ }
export function destroyChartGantt() { const container = document.getElementById('graficoGanttContainer'); if (container) { container.innerHTML = '<svg id="graficoGantt"></svg>'; } ganttInstance = null; }
export function renderizarGraficoGantt(itensCalculadora, duracaoTotalObraMeses, dataInicioObra = new Date()) { destroyChartGantt(); const ganttContainerId = 'graficoGantt'; const ganttElement = document.getElementById(ganttContainerId); if (!ganttElement) { console.error('Elemento SVG para Gantt não encontrado:', ganttContainerId); return; } if (duracaoTotalObraMeses <= 0) { ganttElement.innerHTML = ''; return; } const inicioAno = dataInicioObra.getFullYear(); const inicioMes = String(dataInicioObra.getMonth() + 1).padStart(2, '0'); const inicioDia = String(dataInicioObra.getDate()).padStart(2, '0'); const dataInicioFormatada = `${inicioAno}-${inicioMes}-${inicioDia}`; let dataFimObra = new Date(dataInicioObra); dataFimObra.setMonth(dataFimObra.getMonth() + duracaoTotalObraMeses); const fimAno = dataFimObra.getFullYear(); const fimMes = String(dataFimObra.getMonth() + 1).padStart(2, '0'); const fimDia = String(dataFimObra.getDate()).padStart(2, '0'); const dataFimFormatada = `${fimAno}-${fimMes}-${fimDia}`; const tasks = [ { id: 'obra_total', name: 'Duração Total Estimada da Obra', start: dataInicioFormatada, end: dataFimFormatada, progress: 5, custom_class: 'bar-milestone' } ]; if (tasks.length > 0) { try { ganttInstance = new Gantt(`#${ganttContainerId}`, tasks, { view_modes: ['Day', 'Week', 'Month'], bar_corner_radius: 3, padding: 18, view_mode: 'Month', date_format: 'YYYY-MM-DD', language: 'pt', custom_popup_html: function(task) { const start_date = new Date(task._start).toLocaleDateString('pt-BR'); const end_date = new Date(task._end).toLocaleDateString('pt-BR'); return ` <div class="gantt-popup" style="padding:10px; font-size:12px; background:white; border:1px solid #ccc; box-shadow:0 2px 5px rgba(0,0,0,0.2);"> <strong>${task.name}</strong><br/> Início: ${start_date}<br/> Fim: ${end_date}<br/> Progresso: ${task.progress}% </div> `; } }); } catch (e) { console.error("Erro ao renderizar gráfico de Gantt:", e); ganttElement.innerHTML = '<p style="color:red;">Erro ao renderizar o gráfico de Gantt.</p>'; } } else { ganttElement.innerHTML = ''; } }